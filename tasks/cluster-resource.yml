- name: Fail kind not specified for cluster level resource
  fail:
    msg: >
      Kind not specified for resource at cluster level.
      {{ resource | to_yaml }}
  when: >
    resource.kind is not defined or
    resource.kind == ''

- name: Fail unsupported kind for cluster resource, {{ resource.kind }}
  fail:
    msg: >
      Resource kind {{ resource.kind }} is not supported.
      {{ resource | to_yaml }}
  when: >
    resource.kind not in openshift_provision_supported_cluster_resource_types

- name: Fail for missing name on cluster level resource
  fail:
    msg: >
      Resources must specify name.
      {{ resource | to_yaml }}
  when: >
    resource.metadata.name is not defined or
    resource.metadata.name == ''

- name: Get {{ resource.kind }} {{ resource.metadata.name }}
  command: >
    oc export -o json
    {{ resource.kind | quote }}
    {{ resource.metadata.name | quote }}
  changed_when: false
  failed_when: false
  register: get_resource

- name: Create {{ resource.kind }} {{ resource.metadata.name }}
  shell:
    echo {{ resource | to_json | quote }}
    | oc create -f -
  when: get_resource.rc != 0

- name: Update {{ resource.kind }} {{ resource.metadata.name }}
  shell:
    echo {{ resource | to_json | quote }}
    | oc apply -f -
  vars:
    curr_resource: >
      {{
        (get_resource.stdout if get_resource.rc == 0 else '{}')
        | from_json
      }}
  when: >
    not( resource.no_update | default(False) | bool ) and
    get_resource.rc == 0 and (
      curr_resource | json_query('spec') !=
        resource | json_query('spec')
      or
      curr_resource | json_query('rules') !=
        resource | json_query('rules')
      or
      ( curr_resource | json_query('metadata.labels') or {} ) !=
      ( curr_resource | json_query('metadata.labels') or {} )
        | combine(resource | json_query('metadata.labels') or {}, recursive=True)
      or
      ( curr_resource | json_query('metadata.annotations') or {} ) !=
      ( curr_resource | json_query('metadata.annotations') or {} )
        | combine(resource | json_query('metadata.annotations') or {}, recursive=True)
    )
