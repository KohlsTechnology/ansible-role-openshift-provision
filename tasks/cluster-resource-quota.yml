- name: Deprecation Warning
  fail:
    msg: USING DEPRECATED FEATURE openshift_clusters[*].cluster_resource_quota
  ignore_errors: true

- name: Get ClusterResourceQuota {{ cluster_resource_quota.name }}
  command: >
    {{ oc_cmd }} get clusterresourcequota {{ cluster_resource_quota.name | quote }} -o json
  failed_when: false
  changed_when: false
  register: get_obj

- when: get_obj.rc != 0
  name: Create ClusterResourceQuota {{ cluster_resource_quota.name }}
  shell: >
    echo {{ quotadef | to_json | quote }}
    | {{ oc_cmd }} create -f -
  vars:
    quotadef:
      apiVersion: v1
      kind: ClusterResourceQuota
      metadata:
        name: "{{ cluster_resource_quota.name }}"
      spec: "{{ cluster_resource_quota.spec }}"

- name: Update ClusterResourceQuota {{ cluster_resource_quota.name }}
  when: >
    get_obj.rc == 0 and
    get_obj.stdout | from_json | json_query('spec') | to_yaml
    != cluster_resource_quota.spec | to_yaml
  command: >
    {{ oc_cmd }} patch clusterresourcequota {{ cluster_resource_quota.name | quote }}
    -p {{ quotadef | to_json | quote }}
  vars:
    quotadef:
      spec: "{{ cluster_resource_quota.spec }}"

- name: Set annotations for ClusterResourceQuota {{ cluster_resource_quota.name }}
  command: >
    {{ oc_cmd }} patch clusterresourcequota {{ cluster_resource_quota.name | quote }}
    -R -p {{ patch | to_json | quote }}
  vars:
    current_annotations: >-
      {{
      ( get_obj.stdout if get_obj.rc == 0 else '{}' )
      | from_json
      | json_query('metadata.annotations')
      }}
    patch:
      metadata:
        annotations: "{{ cluster_resource_quota.annotations | default({}) }}"
  when:
    cluster_resource_quota.annotations is defined and (
      get_obj.rc != 0 or
      current_annotations is not defined or
      current_annotations == '' or
      current_annotations !=
        current_annotations | combine(cluster_resource_quota.annotations, recursive=True)
    )
